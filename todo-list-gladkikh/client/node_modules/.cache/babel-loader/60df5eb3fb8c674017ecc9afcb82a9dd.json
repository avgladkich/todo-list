{"ast":null,"code":"var _jsxFileName = \"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/ActionButton.tsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactToPrint from \"react-to-print\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ActionButton = props => {\n  const {\n    componentToPrint\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactToPrint, {\n      trigger: () => /*#__PURE__*/_jsxDEV(Button, {\n        id: \"print\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: [\" \", \"Print\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this),\n      content: () => componentToPrint.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ActionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionButton\");","map":{"version":3,"sources":["/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/ActionButton.tsx"],"names":["React","Button","ReactToPrint","ActionButton","props","componentToPrint","current"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAMA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAA8B;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAuBD,KAA7B;AAEA,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,OAAO,EAAE,mBACP,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,OAAZ;AAAqB,QAAA,OAAO,EAAC,WAA7B;AAAyC,QAAA,KAAK,EAAC,SAA/C;AAAA,mBACG,GADH,EAEG,OAFH,EAEY,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAOE,MAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACC;AAPlC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD,CAhBM;KAAMH,Y","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactToPrint from \"react-to-print\";\n\ntype ActionButtonProps = {\n  componentToPrint: React.MutableRefObject<null>;\n};\n\nexport const ActionButton = (props: ActionButtonProps) => {\n  const { componentToPrint } = props;\n\n  return (\n    <>\n      <ReactToPrint\n        trigger={() => (\n          <Button id={\"print\"} variant=\"contained\" color=\"primary\">\n            {\" \"}\n            {\"Print\"}{\" \"}\n          </Button>\n        )}\n        content={() => componentToPrint.current}\n      />\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}