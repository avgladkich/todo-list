{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport AuthService from \"../services/AuthService\";\nimport axios from 'axios';\nimport { API_URL } from \"../http\";\nexport default class Store {\n  constructor() {\n    this.user = {};\n    this.isAuth = false;\n    this.isLoading = false;\n    this.isSignIn = false;\n    makeAutoObservable(this);\n  }\n\n  setAuth(bool) {\n    this.isAuth = bool;\n  }\n\n  setUser(user) {\n    this.user = user;\n  }\n\n  setLoading(bool) {\n    this.isLoading = bool;\n  }\n\n  setSignIn() {\n    this.isSignIn = !this.isSignIn;\n  }\n\n  async login(email, password) {\n    try {\n      debugger;\n      const response = await AuthService.login(email, password);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response, _e$response$data;\n\n      console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  }\n\n  async registarion(name, lastName, email, password) {\n    try {\n      const response = await AuthService.registration(name, lastName, email, password);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n\n      console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n    }\n  }\n\n  async logout() {\n    try {\n      const response = await AuthService.logout();\n      localStorage.removeItem('token');\n      this.setAuth(false);\n      this.setUser({});\n    } catch (e) {\n      var _e$response3, _e$response3$data;\n\n      console.log((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message);\n    }\n  }\n\n  async checkAuth() {\n    this.setLoading(true);\n\n    try {\n      const response = await axios.get(`${API_URL}/refresh`, {\n        withCredentials: true\n      });\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response4, _e$response4$data;\n\n      console.log((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","AuthService","axios","API_URL","Store","constructor","user","isAuth","isLoading","isSignIn","setAuth","bool","setUser","setLoading","setSignIn","login","email","password","response","localStorage","setItem","data","accessToken","e","console","log","message","registarion","name","lastName","registration","logout","removeItem","checkAuth","get","withCredentials"],"sources":["/Users/agladkich/todo-list/todo-list-gladkikh/src/store/store.ts"],"sourcesContent":["import { IUser } from \"../models/IUser\";\nimport { makeAutoObservable } from 'mobx';\nimport AuthService from \"../services/AuthService\";\nimport axios from 'axios';\nimport { AuthResponse } from \"../models/response/AuthResponse\";\nimport { API_URL } from \"../http\";\n\nexport default class Store {\n    user = {} as IUser;\n    isAuth = false;\n    isLoading = false;\n    isSignIn = false;\n\n    constructor(){\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool: boolean) {\n        this.isAuth = bool;\n    }\n\n    setUser(user: IUser){\n        this.user = user;\n    }\n\n    setLoading(bool: boolean) {\n        this.isLoading = bool;\n    }\n\n    setSignIn() {\n        this.isSignIn = !this.isSignIn;\n    }\n\n    async login(email: string, password: string) {\n        try {\n            debugger\n            const response = await AuthService.login(email, password);\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message)\n        }\n    }\n\n    async registarion(name: string, lastName: string, email: string, password: string) {\n        try {\n            const response = await AuthService.registration(name, lastName, email, password);\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message)\n        }\n    }\n\n    async logout() {\n        try {\n            const response = await AuthService.logout();\n            localStorage.removeItem('token');\n            this.setAuth(false);\n            this.setUser({} as IUser);\n        } catch (e) {\n            console.log(e.response?.data?.message)\n        }\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, { withCredentials: true  });\n\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e ) {\n            console.log(e.response?.data?.message)\n        } finally {\n            this.setLoading(false);\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}