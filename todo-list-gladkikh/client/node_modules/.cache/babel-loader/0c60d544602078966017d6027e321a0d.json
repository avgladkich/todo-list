{"ast":null,"code":"import { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport Paper from '@mui/material/Paper';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nexport { ThemeProvider };\nexport const Search = styled('div')(({\n  theme\n}) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto'\n  }\n}));\nexport const SearchIconWrapper = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}));\nexport const StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}));\nexport const Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  textAlign: 'auto',\n  color: theme.palette.text.secondary,\n  height: 60,\n  lineHeight: '60px'\n}));\nexport const darkTheme = createTheme({\n  palette: {\n    mode: 'dark'\n  }\n});\nexport const lightTheme = createTheme({\n  palette: {\n    mode: 'light'\n  }\n});","map":{"version":3,"sources":["/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/styleMUI.js"],"names":["styled","alpha","InputBase","Paper","createTheme","ThemeProvider","Search","theme","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","color","paddingLeft","transition","transitions","create","Item","typography","body2","textAlign","text","secondary","lineHeight","darkTheme","mode","lightTheme"],"mappings":"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","sourcesContent":["import { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport Paper from '@mui/material/Paper';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n\nexport {ThemeProvider}\n\n\nexport const Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n}));\n\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\n\nexport const Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  textAlign: 'auto',\n  color: theme.palette.text.secondary,\n  height: 60,\n  lineHeight: '60px',\n}));\n\nexport const darkTheme = createTheme({ palette: { mode: 'dark' } });\nexport const lightTheme = createTheme({ palette: { mode: 'light' } });\n"]},"metadata":{},"sourceType":"module"}