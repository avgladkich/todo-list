{"ast":null,"code":"var _jsxFileName = \"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { TextField, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet count = 1;\nexport const TodoList = props => {\n  _s();\n\n  const [list, setList] = useState([{\n    id: 0,\n    value: '',\n    componentToPrint: useRef(null)\n  }]);\n  const {\n    componentToPrint\n  } = props;\n\n  const handleChange = (value, id) => {\n    setList(prev => prev.map(item => item.id === id ? { ...item,\n      value\n    } : item));\n  };\n\n  const handleDelete = id => {\n    setList(prev => prev.filter(item => item.id !== id));\n  };\n\n  const handleAdd = index => {\n    const newItem = {\n      id: count++,\n      value: ''\n    }; // @ts-ignore\n\n    setList(prev => [...prev.slice(0, index + 1), newItem, ...prev.slice(index + 1)]);\n  };\n\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(\"div\", {\n      ref: el => componentToPrint.current = el,\n      children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: item.value,\n          onChange: e => handleChange(e.currentTarget.value, item.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleAdd(index),\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), list.length > 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleDelete(item.id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(TodoList, \"FAnwgcEhQ4BUv1wRO7li/F9kMJ4=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/TodoList.tsx"],"names":["React","useRef","useState","TextField","IconButton","AddIcon","DeleteIcon","count","TodoList","props","list","setList","id","value","componentToPrint","handleChange","prev","map","item","handleDelete","filter","handleAdd","index","newItem","slice","el","current","e","currentTarget","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAYA,IAAIC,KAAK,GAAG,CAAZ;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAkB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAa,CAAC;AAAEU,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,EAAhB;AAAoBC,IAAAA,gBAAgB,EAAEb,MAAM,CAAC,IAAD;AAA5C,GAAD,CAAb,CAAhC;AAEA,QAAM;AAAEa,IAAAA;AAAF,MAAuBL,KAA7B;;AAEA,QAAMM,YAAY,GAAG,CAACF,KAAD,EAAgBD,EAAhB,KAAuC;AAC1DD,IAAAA,OAAO,CAAEK,IAAD,IACNA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAWA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGM,IAAL;AAAWL,MAAAA;AAAX,KAAjB,GAAsCK,IAA1D,CADK,CAAP;AAGD,GAJD;;AAMA,QAAMC,YAAY,GAAIP,EAAD,IAAwB;AAC3CD,IAAAA,OAAO,CAAEK,IAAD,IAAUA,IAAI,CAACI,MAAL,CAAaF,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAlC,CAAX,CAAP;AACD,GAFD;;AAIA,QAAMS,SAAS,GAAIC,KAAD,IAAmB;AACnC,UAAMC,OAAO,GAAG;AAAEX,MAAAA,EAAE,EAAEL,KAAK,EAAX;AAAgBM,MAAAA,KAAK,EAAE;AAAvB,KAAhB,CADmC,CAEnC;;AACAF,IAAAA,OAAO,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,CAACQ,KAAL,CAAW,CAAX,EAAcF,KAAK,GAAG,CAAtB,CAAJ,EAA8BC,OAA9B,EAAuC,GAAGP,IAAI,CAACQ,KAAL,CAAWF,KAAK,GAAG,CAAnB,CAA1C,CAAT,CAAP;AACD,GAJD;;AAMA;AAAA;AACI;AACF;AAAK,MAAA,GAAG,EAAGG,EAAD,IAASX,gBAAgB,CAACY,OAAjB,GAA2BD,EAA9C;AAAA,gBACGf,IAAI,CAACO,GAAL,CAAS,CAACC,IAAD,EAAOI,KAAP,kBACR;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAEJ,IAAI,CAACL,KADd;AAEE,UAAA,QAAQ,EAAGc,CAAD,IAAOZ,YAAY,CAACY,CAAC,CAACC,aAAF,CAAgBf,KAAjB,EAAwBK,IAAI,CAACN,EAA7B;AAF/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMS,SAAS,CAACC,KAAD,CAApC;AAAA,iCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,EASGZ,IAAI,CAACmB,MAAL,GAAc,CAAd,iBACC,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMV,YAAY,CAACD,IAAI,CAACN,EAAN,CAAvC;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA,SAAUM,IAAI,CAACN,EAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAsBD,CA3CM;;GAAMJ,Q;;KAAAA,Q","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport { TextField, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\ntype Props = {\n  componentToPrint: React.MutableRefObject<null>;\n};\n\ninterface TodoItem {\n  id: number;\n  value: string;\n  componentToPrint: React.MutableRefObject<null>;\n}\n\nlet count = 1;\n\nexport const TodoList = (props: Props) => {\n  const [list, setList] = useState<TodoItem[]>([{ id: 0, value: '', componentToPrint: useRef(null) }]);\n\n  const { componentToPrint } = props;\n\n  const handleChange = (value: string, id: TodoItem[\"id\"]) => {\n    setList((prev) =>\n      prev.map((item) => (item.id === id ? { ...item, value } : item))\n    );\n  };\n\n  const handleDelete = (id: TodoItem[\"id\"]) => {\n    setList((prev) => prev.filter((item) => item.id !== id));\n  };\n\n  const handleAdd = (index: number) => {\n    const newItem = { id: count ++, value: '' }\n    // @ts-ignore\n    setList(prev => [...prev.slice(0, index + 1), newItem, ...prev.slice(index + 1)])\n  }\n\n  return (\n      // @ts-ignore\n    <div ref={(el) => (componentToPrint.current = el)}>\n      {list.map((item, index) => (\n        <div key={item.id}>\n          <TextField\n            value={item.value}\n            onChange={(e) => handleChange(e.currentTarget.value, item.id)}\n          />\n          <IconButton onClick={() => handleAdd(index)}>\n            <AddIcon />\n          </IconButton>\n\n          {list.length > 1 && (\n            <IconButton onClick={() => handleDelete(item.id)}>\n              <DeleteIcon />\n            </IconButton>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}