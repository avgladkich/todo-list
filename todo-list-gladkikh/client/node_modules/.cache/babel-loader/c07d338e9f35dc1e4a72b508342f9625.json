{"ast":null,"code":"var _jsxFileName = \"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Signin.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction SignIn() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    store\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'secondary.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setEmail(e.target.value),\n            value: email,\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setPassword(e.target.value),\n            value: password,\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            onClick: () => store.login(email, password),\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"outlined\",\n            sx: {\n              mt: 1,\n              mb: 2\n            },\n            onClick: () => store.setSignIn(),\n            children: \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"3ISdhaapKyAdgBaurNyG+pzS4KQ=\");\n\n_c = SignIn;\nexport default _c2 = observer(SignIn);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Signin.tsx"],"names":["React","useContext","useState","Avatar","Button","CssBaseline","TextField","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","observer","Context","theme","SignIn","email","setEmail","password","setPassword","store","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","e","target","value","mb","login","setSignIn"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\n\nconst theme = createTheme();\n\nfunction SignIn() {\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const { store } = useContext(Context);\n\n  return (\n    <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n              sx={{\n                  marginTop: 8,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n              }}\n          >\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                  <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                  Авторизация\n              </Typography>\n              <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n                  <TextField\n                       onChange={ e => setEmail(e.target.value) }\n                      value={ email }\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      autoFocus\n                  />\n                  <TextField\n                   onChange={ e => setPassword(e.target.value) }\n                      value={ password }\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Пароль\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                  />\n                  <Button\n                      fullWidth\n                      variant=\"contained\"\n                      sx={{ mt: 3, mb: 2 }}\n                      onClick={ () => store.login(email, password) }\n                  >\n                  Войти\n                  </Button>\n                  <Button\n                      fullWidth\n                      variant=\"outlined\"\n                      sx={{ mt: 1, mb: 2 }}\n                      onClick={ () => store.setSignIn() }\n                  >\n                   Нет аккаунта? Зарегистрироваться\n                  </Button>\n              </Box>\n          </Box>\n        </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default observer(SignIn)"]},"metadata":{},"sourceType":"module"}