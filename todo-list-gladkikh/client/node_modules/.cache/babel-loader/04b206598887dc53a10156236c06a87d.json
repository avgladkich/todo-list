{"ast":null,"code":"var _jsxFileName = \"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useRef } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Button } from \"@material-ui/core\";\nimport { Context } from '.';\nimport LoginForm from './components/LoginForm';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    store\n  } = useContext(Context);\n  const componentToPrint = useRef(null);\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth();\n    }\n  }, []);\n\n  if (store.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!store.isAuth) {\n    return /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: store.user.isActivated ? 'primary' : 'error',\n        children: store.user.isActivated ? 'Аккаунт подтвержден' : 'Аккаунт не подтвержден'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h2\",\n        variant: \"h5\",\n        color: \"inherit\",\n        align: \"center\",\n        noWrap: true,\n        sx: {\n          flex: 1\n        },\n        children: `Добро пожаловать ${store.user.email}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        size: \"small\",\n        onClick: () => store.logout(),\n        children: [/*#__PURE__*/_jsxDEV(ExitToAppIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      component: \"nav\",\n      variant: \"dense\",\n      sx: {\n        justifyContent: 'space-between',\n        overflowX: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tu2uXnl+aAOBREShrxpCaQGc2/E=\");\n\n_c = App;\nexport default _c2 = observer(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/agladkich/todo-list/todo-list-gladkikh/client/src/App.tsx"],"names":["useContext","useEffect","useRef","observer","Toolbar","Typography","Button","Context","LoginForm","ExitToAppIcon","App","store","componentToPrint","localStorage","getItem","checkAuth","isLoading","isAuth","borderBottom","borderColor","user","isActivated","flex","email","logout","justifyContent","overflowX"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAA0CC,MAA1C,QAAwD,OAAxD;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,OAAT,QAAwB,GAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAGA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAYX,UAAU,CAACO,OAAD,CAA5B;AACA,QAAMK,gBAAgB,GAAGV,MAAM,CAAC,IAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCH,MAAAA,KAAK,CAACI,SAAN;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIJ,KAAK,CAACK,SAAV,EAAoB;AAClB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,MAAI,CAACL,KAAK,CAACM,MAAX,EAAmB;AACjB,wBACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAE;AAAEC,QAAAA,YAAY,EAAE,CAAhB;AAAmBC,QAAAA,WAAW,EAAE;AAAhC,OAAb;AAAA,8BACE,QAAC,UAAD;AAAa,QAAA,OAAO,EAAC,WAArB;AAAiC,QAAA,KAAK,EAAGR,KAAK,CAACS,IAAN,CAAWC,WAAX,GAAyB,SAAzB,GAAqC,OAA9E;AAAA,kBACIV,KAAK,CAACS,IAAN,CAAWC,WAAX,GAAyB,qBAAzB,GAAiD;AADrD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,IADZ;AAEE,QAAA,OAAO,EAAC,IAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,KAAK,EAAC,QAJR;AAKE,QAAA,MAAM,MALR;AAME,QAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SANN;AAAA,kBAQI,oBAAoBX,KAAK,CAACS,IAAN,CAAWG,KAAQ;AAR3C;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,IAAI,EAAC,OAAhC;AAAwC,QAAA,OAAO,EAAG,MAAMZ,KAAK,CAACa,MAAN,EAAxD;AAAA,gCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,EAAE,EAAE;AAAEC,QAAAA,cAAc,EAAE,eAAlB;AAAmCC,QAAAA,SAAS,EAAE;AAA9C;AAHN;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAnDQhB,G;;KAAAA,G;AAqDT,qBAAeP,QAAQ,CAACO,GAAD,CAAvB","sourcesContent":["import { useContext, useEffect, useState, useRef } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport { observer } from 'mobx-react-lite'\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Button } from \"@material-ui/core\";\n\nimport { Context } from '.';\nimport LoginForm from './components/LoginForm';\nimport { TodosMap } from \"./components/Todos/TodosMap\";\n\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport './App.css';\n\nfunction App() {\n  const { store } = useContext(Context);\n  const componentToPrint = useRef(null);\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth();\n    }\n  }, []);\n\n  if (store.isLoading){\n    return (\n      <div>...Loading</div>\n    )\n  }\n\n  if (!store.isAuth) {\n    return (\n      <LoginForm />\n    )\n  }\n\n  return (\n    <div>\n      <Toolbar sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Typography  variant=\"subtitle1\" color={ store.user.isActivated ? 'primary' : 'error' }>\n          { store.user.isActivated ? 'Аккаунт подтвержден' : 'Аккаунт не подтвержден' }\n        </Typography>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          sx={{ flex: 1 }}\n        >\n         { `Добро пожаловать ${ store.user.email  }` }\n        </Typography>\n        <Button variant=\"outlined\" size=\"small\" onClick={ () => store.logout() }>\n          <ExitToAppIcon/>\n          Выйти из аккаунта\n        </Button>\n      </Toolbar>\n      <Toolbar\n        component=\"nav\"\n        variant=\"dense\"\n        sx={{ justifyContent: 'space-between', overflowX: 'auto' }}\n      >\n      </Toolbar>\n    </div>\n  );\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}