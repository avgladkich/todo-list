[{"/Users/agladkich/Diplom/todo-list-gladkikh/src/index.js":"1","/Users/agladkich/Diplom/todo-list-gladkikh/src/App.js":"2","/Users/agladkich/Diplom/todo-list-gladkikh/src/reportWebVitals.js":"3","/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/index.tsx":"4","/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/App.tsx":"5","/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/store/store.ts":"6","/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/services/UserService.ts":"7","/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/services/AuthService.ts":"8","/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/components/LoginForm.tsx":"9","/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/http/index.ts":"10","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/index.tsx":"11","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/App.tsx":"12","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/store/store.ts":"13","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/services/AuthService.ts":"14","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/services/UserService.ts":"15","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/LoginForm.tsx":"16","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/http/index.ts":"17","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Signin.tsx":"18","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Signup.tsx":"19","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/TodosMap.tsx":"20","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/styleMUI.js":"21","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/HeaderTodo.tsx":"22"},{"size":535,"mtime":1652194935866,"results":"23","hashOfConfig":"24"},{"size":528,"mtime":1652194935866,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1652194935866,"results":"26","hashOfConfig":"24"},{"size":423,"mtime":1623580561000,"results":"27","hashOfConfig":"28"},{"size":1708,"mtime":1623580561000,"results":"29","hashOfConfig":"28"},{"size":2245,"mtime":1654345400701,"results":"30","hashOfConfig":"28"},{"size":313,"mtime":1623580561000,"results":"31","hashOfConfig":"28"},{"size":608,"mtime":1623580561000,"results":"32","hashOfConfig":"28"},{"size":1037,"mtime":1623580561000,"results":"33","hashOfConfig":"28"},{"size":1063,"mtime":1654345770897,"results":"34","hashOfConfig":"28"},{"size":423,"mtime":1623580561000,"results":"35","hashOfConfig":"36"},{"size":3613,"mtime":1655139984245,"results":"37","hashOfConfig":"36"},{"size":2332,"mtime":1654349566111,"results":"38","hashOfConfig":"36"},{"size":608,"mtime":1654349572740,"results":"39","hashOfConfig":"36"},{"size":313,"mtime":1623580561000,"results":"40","hashOfConfig":"41"},{"size":405,"mtime":1654333723816,"results":"42","hashOfConfig":"36"},{"size":1063,"mtime":1654348884670,"results":"43","hashOfConfig":"36"},{"size":3131,"mtime":1654333742186,"results":"44","hashOfConfig":"36"},{"size":3890,"mtime":1654349461936,"results":"45","hashOfConfig":"36"},{"size":2164,"mtime":1655131586675,"results":"46","hashOfConfig":"36"},{"size":613,"mtime":1655128223659,"results":"47","hashOfConfig":"36"},{"size":987,"mtime":1655129257269,"results":"48","hashOfConfig":"36"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cnbouz",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5e9nou",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"10tpvp6",{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1eedbkc",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/agladkich/Diplom/todo-list-gladkikh/src/index.js",[],[],"/Users/agladkich/Diplom/todo-list-gladkikh/src/App.js",[],[],"/Users/agladkich/Diplom/todo-list-gladkikh/src/reportWebVitals.js",[],[],"/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/index.tsx",[],[],"/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/App.tsx",["110"],[],"/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/store/store.ts",["111"],[],"import {IUser} from \"../models/IUser\";\nimport {makeAutoObservable} from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from 'axios';\nimport {AuthResponse} from \"../models/response/AuthResponse\";\nimport {API_URL} from \"../http\";\n\nexport default class Store {\n    user = {} as IUser;\n    isAuth = false;\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool: boolean) {\n        this.isAuth = bool;\n    }\n\n    setUser(user: IUser) {\n        this.user = user;\n    }\n\n    setLoading(bool: boolean) {\n        this.isLoading = bool;\n    }\n\n    async login(email: string, password: string) {\n        try {\n            const response = await AuthService.login(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async registration(email: string, password: string) {\n        try {\n            const response = await AuthService.registration(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async logout() {\n        try {\n            const response = await AuthService.logout();\n            localStorage.removeItem('token');\n            this.setAuth(false);\n            this.setUser({} as IUser);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\n            console.log(response);\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        } finally {\n            this.setLoading(false);\n        }\n    }\n}\n",[],"/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/services/UserService.ts",["112"],[],"/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/services/AuthService.ts",[],[],"/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/components/LoginForm.tsx",[],[],"/Users/agladkich/Downloads/fullstack-jwt-auth-master/client/src/http/index.ts",["113","114"],[],"import axios from 'axios';\nimport {AuthResponse} from \"../models/response/AuthResponse\";\nimport {store} from \"../index\";\nimport {IUser} from \"../models/IUser\";\n\nexport const API_URL = `http://localhost:5000/api`\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n})\n\n$api.interceptors.request.use((config) => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n    return config;\n})\n\n$api.interceptors.response.use((config) => {\n    return config;\n},async (error) => {\n    const originalRequest = error.config;\n    if (error.response.status === 401 && error.config && !error.config._isRetry) {\n        originalRequest._isRetry = true;\n        try {\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\n            localStorage.setItem('token', response.data.accessToken);\n            return $api.request(originalRequest);\n        } catch (e) {\n            console.log('НЕ АВТОРИЗОВАН')\n        }\n    }\n    throw error;\n})\n\nexport default $api;\n","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/index.tsx",[],["115","116"],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/App.tsx",["117","118"],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/store/store.ts",["119"],"import {IUser} from \"../models/IUser\";\nimport {makeAutoObservable} from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from 'axios';\nimport {AuthResponse} from \"../models/response/AuthResponse\";\nimport {API_URL} from \"../http\";\n\nexport default class Store {\n    user = {} as IUser;\n    isAuth = false;\n    isLoading = false;\n    isSignIn = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool: boolean) {\n        this.isAuth = bool;\n    }\n\n    setUser(user: IUser) {\n        this.user = user;\n    }\n\n    setLoading(bool: boolean) {\n        this.isLoading = bool;\n    }\n\n    setSignIn() {\n        this.isSignIn = !this.isSignIn;\n    }\n\n    async login(email: string, password: string) {\n        try {\n            const response = await AuthService.login(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async registration(email: string, password: string) {\n        try {\n            const response = await AuthService.registration(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async logout() {\n        try {\n            const response = await AuthService.logout();\n            localStorage.removeItem('token');\n            this.setAuth(false);\n            this.setUser({} as IUser);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\n            console.log(response);\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        } finally {\n            this.setLoading(false);\n        }\n    }\n}\n","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/services/AuthService.ts",[],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/services/UserService.ts",["120"],[],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/LoginForm.tsx",[],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/http/index.ts",["121","122"],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Signin.tsx",["123"],"import React, { useContext, useState } from 'react'\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\n\nconst theme = createTheme();\n\nfunction SignIn() {\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const { store } = useContext(Context);\n\n  return (\n    <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n              sx={{\n                  marginTop: 8,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n              }}\n          >\n              <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                  <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                  Авторизация\n              </Typography>\n              <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n                  <TextField\n                       onChange={ e => setEmail(e.target.value) }\n                      value={ email }\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      autoFocus\n                  />\n                  <TextField\n                   onChange={ e => setPassword(e.target.value) }\n                      value={ password }\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Пароль\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                  />\n                  <Button\n                      fullWidth\n                      variant=\"contained\"\n                      sx={{ mt: 3, mb: 2 }}\n                      onClick={ () => store.login(email, password) }\n                  >\n                  Войти\n                  </Button>\n                  <Button\n                      fullWidth\n                      variant=\"outlined\"\n                      sx={{ mt: 1, mb: 2 }}\n                      onClick={ () => store.setSignIn() }\n                  >\n                   Нет аккаунта? Зарегистрироваться\n                  </Button>\n              </Box>\n          </Box>\n        </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default observer(SignIn)","/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Signup.tsx",[],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/TodosMap.tsx",[],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/styleMUI.js",[],"/Users/agladkich/todo-list/todo-list-gladkikh/client/src/components/Todos/HeaderTodo.tsx",[],{"ruleId":"124","severity":1,"message":"125","line":16,"column":8,"nodeType":"126","endLine":16,"endColumn":10,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":55,"column":19,"nodeType":"130","messageId":"131","endLine":55,"endColumn":27},{"ruleId":"128","severity":1,"message":"132","line":3,"column":9,"nodeType":"130","messageId":"131","endLine":3,"endColumn":21},{"ruleId":"128","severity":1,"message":"133","line":3,"column":9,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"134","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":14},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"128","severity":1,"message":"139","line":1,"column":43,"nodeType":"130","messageId":"131","endLine":1,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":97,"column":6,"nodeType":"126","endLine":97,"endColumn":8,"suggestions":"140"},{"ruleId":"128","severity":1,"message":"129","line":60,"column":19,"nodeType":"130","messageId":"131","endLine":60,"endColumn":27},{"ruleId":"128","severity":1,"message":"132","line":3,"column":9,"nodeType":"130","messageId":"131","endLine":3,"endColumn":21},{"ruleId":"128","severity":1,"message":"133","line":3,"column":9,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"134","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":14},{"ruleId":"128","severity":1,"message":"141","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":12},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["142"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'AuthResponse' is defined but never used.","'store' is defined but never used.","'IUser' is defined but never used.","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'useRef' is defined but never used.",["145"],"'Link' is defined but never used.",{"desc":"146","fix":"147"},"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"148"},"Update the dependencies array to be: [store]",{"range":"149","text":"150"},{"range":"151","text":"150"},[511,513],"[store]",[2352,2354]]